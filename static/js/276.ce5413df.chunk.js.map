{"version":3,"file":"static/js/276.ce5413df.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\npadding-left: 20px;\ndisplay: flex;\ngap: 10px;\nflex-direction:column`;\nexport const MovieItem = styled.li`\n  list-style-type: none;\n  font-size: 18px;\n`;\n","import { MovieList, MovieItem } from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation()\n  \n  return (\n    <MovieList>\n      {movies.map(movie => {\n        const name = movie.name ?? movie.title;\n        if (location.pathname.includes('/movies')) {\n          return (\n            <MovieItem key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {name}\n              </Link>\n            </MovieItem>\n          );\n        } else {\n          return (\n            <MovieItem key={movie.id}>\n              <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                {name}{' '}\n              </Link>\n            </MovieItem>\n          );\n        }\n      })}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\n\nexport const Style = styled.div`\n  border: 1px solid #ddd;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n`;\nexport const GoBackBtn = styled.button`\n  display: flex;\n  margin-bottom: 20px;\n  margin-left: 20px;\n  margin-top: 20px;\n`;\nexport const MovieImg = styled.img`\nmargin-left: 20px;`;\nexport const MovieName = styled.h2`\n  font-size: 30px;\n`;\nexport const UserScore = styled.p`\n  font-size: 18px;\n`;\nexport const Overview = styled.h3``;\nexport const OverviewText = styled.p`\n  font-size: 18px;\n`;\nexport const Genres = styled.h3`\n  font-weight: bold;\n`;\nexport const GenresText = styled.p`\n  font-size: 18px;\n`;\nexport const GenresStyles = styled.div`\n  display: flex;\n  gap: 8px;\n`;\nexport const AdInfo = styled.p`\n  font-size: 18px;\n  margin-left: 40px;\n`;\nexport const InfoList = styled.ul`\n`;\nexport const InfoItem = styled.li`\n  list-style-type: none;\n \n`;\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\nexport const Movie = styled.div`\n  display: flex;\n`;\n","import { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport {\n  Style,\n  MovieImg,\n  MovieName,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  GenresText,\n  GoBackBtn,\n  AdInfo,\n  InfoList,\n  Movie,\n  MovieInfo,\n  GenresStyles,\n  InfoItem,\n} from './MovieDetails.styled';\nimport { fetchMovieDetails } from 'Services/api';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (movieId) {\n          const fetchedMovie = await fetchMovieDetails(movieId);\n          const releaseYear = new Date(fetchedMovie.release_date).getFullYear();\n          const percentage = (fetchedMovie.vote_average / 10) * 100;\n          setMovie({ ...fetchedMovie, releaseYear, percentage });\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovie(null);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/images=1000x700';\n\n  return (\n    <main>\n      {movie && (\n        <Style>\n          <Link to={backLink} style={{ textDecoration: 'none' }}>\n            <GoBackBtn type=\"button\">\n              <AiOutlineArrowLeft />\n              Go back\n            </GoBackBtn>\n          </Link> \n          <Movie>\n            <MovieImg\n              src={\n                movie.poster_path\n                  ? `${baseUrl}${movie.poster_path}`\n                  : defaultImg\n              }\n            ></MovieImg>\n\n            <MovieInfo>\n              <MovieName>\n                {movie.title} ({movie.releaseYear})\n              </MovieName>\n              <UserScore>User Score: {movie.percentage.toFixed(1)}%</UserScore>\n              <Overview>Overview</Overview>\n              <OverviewText>{movie.overview}</OverviewText>\n              <Genres>Genres</Genres>\n              <GenresStyles>\n                {movie.genres.map(genre => (\n                  <GenresText key={genre.id}>{genre.name}</GenresText>\n                ))}\n              </GenresStyles>\n            </MovieInfo>\n          </Movie>\n          <AdInfo>Additional information</AdInfo>\n          <InfoList>\n            <InfoItem>\n              <Link to=\"cast\">Cast</Link>\n            </InfoItem>\n            <InfoItem>\n              <Link to=\"reviews\">Reviews</Link>\n            </InfoItem>\n          </InfoList>\n          <Outlet/>\n        </Style>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 20px;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 500px;\n  height: 40px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  border-radius: 50px;\n  outline: none;\n  padding-left: 16px;\n  padding-right: 16px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const SearchBtn = styled.button`\n  background-color: #c2fbd7;\n  border-radius: 50px;\n  border-width: 0;\n  box-shadow: rgba(25, 25, 25, 0.04) 0 0 1px 0, rgba(0, 0, 0, 0.1) 0 3px 4px 0;\n  color: #008000;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  text-align: center;\n  font-weight: bold;\n  height: 40px;\n  padding: 8px 25px;\n  transition: all 200ms;\n  &:hover {\n    background-color: #afe6c3;\n    transform: scale(1.05);\n  }\n`;\n","import { SearchForm, SearchFormInput, SearchBtn } from './Search.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\n\nexport const Search = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(searchParams);\n    setSearchParams({ query: inputValue });\n    if (inputValue.trim() === '') {\n      return;\n    }\n    onSubmit(inputValue);\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={inputValue}\n        onChange={handleChange}\n      ></SearchFormInput>\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </SearchForm>\n  );\n};\n","import MovieDetails from 'pages/MovieDetails/MovieDetails';\nimport { Search } from 'components/Search/Search';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useParams,useSearchParams } from 'react-router-dom';\n\nimport { fetchSearch } from 'Services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n\n  useEffect(() => {\n    if (!movieId) return;\n  }, [movieId]);\n\n  const handleSubmit = value => {\n  };\n  \n  useEffect(() => {\n    if (query) {\n      fetchSearch(query).then(movies => {\n        if (movies.results.length > 0) {\n          setMovies(movies.results);\n        }\n      });\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <Search onSubmit={handleSubmit}></Search>\n      <MoviesList movies={movies}></MoviesList>\n      <MovieDetails movieId={movieId}></MovieDetails>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","_ref","movies","location","useLocation","_jsx","children","map","movie","_movie$name","name","title","pathname","includes","Link","to","concat","id","state","from","_jsxs","Style","GoBackBtn","MovieImg","_templateObject3","MovieName","_templateObject4","UserScore","_templateObject5","Overview","_templateObject6","OverviewText","_templateObject7","Genres","_templateObject8","GenresText","_templateObject9","GenresStyles","_templateObject10","AdInfo","_templateObject11","InfoList","_templateObject12","InfoItem","_templateObject13","MovieInfo","_templateObject14","Movie","_templateObject15","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","backLink","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovie","releaseYear","percentage","_context","prev","next","fetchMovieDetails","sent","Date","release_date","getFullYear","vote_average","_objectSpread","t0","console","error","stop","apply","arguments","style","textDecoration","type","AiOutlineArrowLeft","src","poster_path","toFixed","overview","genres","genre","Outlet","SearchForm","SearchFormInput","SearchBtn","Search","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","inputValue","setInputValue","e","preventDefault","log","query","trim","autoComplete","autoFocus","value","onChange","currentTarget","setMovies","get","fetchSearch","then","results","length","MoviesList","MovieDetails"],"sourceRoot":""}