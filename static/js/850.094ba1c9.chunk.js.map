{"version":3,"file":"static/js/850.094ba1c9.chunk.js","mappings":"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","sources":["Services/api.js","components/MoviesList/styled.js","components/MoviesList/MoviesList.jsx","pages/MovieDetails/styled.js","pages/MovieDetails/MovieDetails.jsx","components/Search/styled.js","components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchTrend() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=7cdf1e3e478f8db80707c45dfe34ab37&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchSearch(value) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${value}&include_adult=false&api_key=7cdf1e3e478f8db80707c45dfe34ab37&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=7cdf1e3e478f8db80707c45dfe34ab37&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=7cdf1e3e478f8db80707c45dfe34ab37&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReview(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=7cdf1e3e478f8db80707c45dfe34ab37&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import styled from 'styled-components';\n\nexport const MovieOverlay = styled.div`\n  bottom: 0;\n  left: 0;\n  min-height: 480px;\n  background-color: rgba(117, 115, 115, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #fff;\n  padding: 16px;\n  border-radius: 8px;\n  justify-content: flex-start;\n`;\n\nexport const MovieList = styled.ul`\n  padding: 0;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport const MovieItem = styled.li`\n  position: relative;\n  width: 300px;\n  list-style-type: none;\n  font-size: 18px;\n`;\nexport const MovieListImg = styled.img`\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  border: 1px solid #ddd;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n`;\nexport const MovieName = styled.h2`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  text-decoration: none;\n  margin-top: 24px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport {\n  MovieList,\n  MovieItem,\n  MovieListImg,\n  MovieName,\n  MovieOverlay,\n} from './styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const baseUrl = 'https://image.tmdb.org/t/p/w400';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/images=1000x700';\n\n  return (\n    <MovieList>\n      {movies.map(movie => {\n        const name = movie.name ?? movie.title;\n        if (location.pathname.includes('/movies')) {\n          return (\n            <MovieItem key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                <MovieOverlay>\n                  <MovieListImg\n                    src={\n                      movie.poster_path\n                        ? `${baseUrl}${movie.poster_path}`\n                        : defaultImg\n                    }\n                    alt={`Poster for ${name}`}\n                  />\n\n                  <MovieName> {name}</MovieName>\n                </MovieOverlay>\n              </Link>\n            </MovieItem>\n          );\n        } else {\n          return (\n            <MovieItem key={movie.id}>\n              <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                <MovieOverlay>\n                  <MovieListImg\n                    src={\n                      movie.poster_path\n                        ? `${baseUrl}${movie.poster_path}`\n                        : defaultImg\n                    }\n                    alt={`Poster for ${name}`}\n                  />\n\n                  <MovieName> {name} </MovieName>\n                </MovieOverlay>\n              </Link>\n            </MovieItem>\n          );\n        }\n      })}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Style = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #ddd;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background-color: rgba(117, 115, 115, 0.5);\n  border-radius: 8px;\n\n  @media (max-width: 1440px) {\n    display: block;\n  }\n\n  @media (max-width: 768px) {\n  }\n`;\nexport const GoBackBtn = styled.button`\n  display: flex;\n  margin-bottom: 20px;\n  margin-left: 20px;\n  margin-top: 20px;\n  border-radius: 8px;\n\n  @media (max-width: 1440px) {\n    margin-left: 40px;\n  }\n`;\nexport const MovieImg = styled.img`\n  margin-left: 20px;\n  margin-right: 20px;\n  border: 1px solid #ddd;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n\n  @media (max-width: 1440px) {\n    margin-left: 40px;\n  }\n`;\nexport const MovieName = styled.h2`\n  font-size: 30px;\n`;\nexport const UserScore = styled.p`\n  font-size: 18px;\n`;\nexport const Overview = styled.h3``;\nexport const OverviewText = styled.p`\n  font-size: 18px;\n  padding-right: 20px;\n`;\nexport const Genres = styled.h3`\n  font-weight: bold;\n`;\nexport const GenresText = styled.p`\n  font-size: 18px;\n`;\nexport const GenresStyles = styled.div`\n  display: flex;\n  gap: 8px;\n`;\nexport const AdInfo = styled.p`\n  font-size: 18px;\n  margin-left: 20px;\n  font-weight: bold;\n  @media (max-width: 1440px) {\n    margin-left: 40px;\n  }\n  @media (max-width: 378px) {\n    text-align: center;\n  }\n`;\nexport const InfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding-left: 20px;\n\n  @media (max-width: 1440px) {\n    padding-left: 40px;\n  }\n  @media (max-width: 378px) {\n    justify-content: center;\n  }\n`;\nexport const InfoItem = styled.li`\n  list-style-type: none;\n  border: 1px solid #ddd;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 8px;\n  background-color: #c2fbd7;\n`;\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 860px;\n  margin-left: 20px;\n  margin-right: 20px;\n`;\nexport const Movie = styled.div`\n  display: flex;\n  @media (max-width: 430px) {\n    flex-direction: column;\n  }\n`;\n","import { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { Suspense, useRef } from 'react';\nimport { fetchMovieDetails } from 'Services/api';\n\nimport {\n  Style,\n  MovieImg,\n  MovieName,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  GenresText,\n  GoBackBtn,\n  AdInfo,\n  InfoList,\n  Movie,\n  MovieInfo,\n  GenresStyles,\n  InfoItem,\n} from './styled';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (movieId) {\n          const fetchedMovie = await fetchMovieDetails(movieId);\n          const releaseYear = new Date(fetchedMovie.release_date).getFullYear();\n          const percentage = (fetchedMovie.vote_average / 10) * 100;\n          setMovie({ ...fetchedMovie, releaseYear, percentage });\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovie(null);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/images=1000x700';\n\n  return (\n    <main>\n      {movie && (\n        <Style>\n          <Link to={backLink.current} style={{ textDecoration: 'none' }}>\n            <GoBackBtn type=\"button\">\n              <AiOutlineArrowLeft />\n              Go back\n            </GoBackBtn>\n          </Link>\n          <Movie>\n            <MovieImg\n              src={\n                movie.poster_path\n                  ? `${baseUrl}${movie.poster_path}`\n                  : defaultImg\n              }\n            ></MovieImg>\n\n            <MovieInfo>\n              <MovieName>\n                {movie.title} ({movie.releaseYear})\n              </MovieName>\n              <UserScore>User Score: {movie.percentage.toFixed(1)}%</UserScore>\n              <Overview>Overview</Overview>\n              <OverviewText>{movie.overview}</OverviewText>\n              <Genres>Genres</Genres>\n              <GenresStyles>\n                {movie.genres.map(genre => (\n                  <GenresText key={genre.id}>{genre.name}</GenresText>\n                ))}\n              </GenresStyles>\n            </MovieInfo>\n          </Movie>\n          <AdInfo>Additional information</AdInfo>\n          <InfoList>\n            <InfoItem>\n              <Link to=\"cast\">Cast</Link>\n            </InfoItem>\n            <InfoItem>\n              <Link to=\"reviews\">Reviews</Link>\n            </InfoItem>\n          </InfoList>\n          <Suspense fallback={<div>Loading page...</div>}>\n            <Outlet />\n          </Suspense>\n        </Style>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 20px;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 500px;\n  height: 40px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  border-radius: 50px;\n  outline: none;\n  padding-left: 16px;\n  padding-right: 16px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const SearchBtn = styled.button`\n  background-color: #c2fbd7;\n  border-radius: 50px;\n  border-width: 0;\n  box-shadow: rgba(25, 25, 25, 0.04) 0 0 1px 0, rgba(0, 0, 0, 0.1) 0 3px 4px 0;\n  color: #008000;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Arial, sans-serif;\n  font-size: 20px;\n  text-align: center;\n  font-weight: bold;\n  height: 40px;\n  padding: 8px 25px;\n  transition: all 200ms;\n  &:hover {\n    background-color: #afe6c3;\n    transform: scale(1.05);\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\n\nimport { SearchForm, SearchFormInput, SearchBtn } from './styled';\n\nexport const Search = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(searchParams);\n    setSearchParams({ query: inputValue });\n    if (inputValue.trim() === '') {\n      return;\n    }\n    onSubmit(inputValue);\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={inputValue}\n        onChange={handleChange}\n      ></SearchFormInput>\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </SearchForm>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport { fetchSearch } from 'Services/api';\nimport MovieDetails from 'pages/MovieDetails/MovieDetails';\nimport { Search } from 'components/Search/Search';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  useEffect(() => {\n    if (!movieId) return;\n  }, [movieId]);\n\n  const handleSubmit = value => {};\n\n  useEffect(() => {\n    if (query) {\n      fetchSearch(query).then(movies => {\n        if (movies.results.length > 0) {\n          setMovies(movies.results);\n        }\n      });\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <Search onSubmit={handleSubmit}></Search>\n      <MoviesList movies={movies}></MoviesList>\n      <MovieDetails movieId={movieId}></MovieDetails>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["fetchTrend","_fetchTrend","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","t0","stop","fetchSearch","_x","_fetchSearch","_callee2","value","_context2","concat","fetchMovieDetails","_x2","_fetchMovieDetails","_callee3","id","_context3","fetchCast","_x3","_fetchCast","_callee4","_context4","fetchReview","_x4","_fetchReview","_callee5","_context5","MovieOverlay","styled","_templateObject","_taggedTemplateLiteral","MovieList","_templateObject2","MovieItem","_templateObject3","MovieListImg","_templateObject4","MovieName","_templateObject5","_ref","movies","location","useLocation","baseUrl","defaultImg","_jsx","children","map","movie","_movie$name","name","title","pathname","includes","Link","to","state","from","_jsxs","src","poster_path","alt","Style","GoBackBtn","MovieImg","UserScore","Overview","_templateObject6","OverviewText","_templateObject7","Genres","_templateObject8","GenresText","_templateObject9","GenresStyles","_templateObject10","AdInfo","_templateObject11","InfoList","_templateObject12","InfoItem","_templateObject13","MovieInfo","_templateObject14","Movie","_templateObject15","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","backLink","useRef","useEffect","fetchData","fetchedMovie","releaseYear","percentage","Date","release_date","getFullYear","vote_average","_objectSpread","console","error","current","style","textDecoration","type","AiOutlineArrowLeft","toFixed","overview","genres","genre","Suspense","fallback","Outlet","SearchForm","SearchFormInput","SearchBtn","Search","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","inputValue","setInputValue","e","preventDefault","log","query","trim","autoComplete","autoFocus","onChange","currentTarget","setMovies","get","then","results","length","MoviesList","MovieDetails"],"sourceRoot":""}